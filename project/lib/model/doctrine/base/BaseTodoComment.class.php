<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TodoComment', 'doctrine');

/**
 * BaseTodoComment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $todo_id
 * @property integer $sf_guard_user_id
 * @property string $comment
 * @property enum $is_active
 * @property Todo $Todo
 * 
 * @method integer     getTodoId()           Returns the current record's "todo_id" value
 * @method integer     getSfGuardUserId()    Returns the current record's "sf_guard_user_id" value
 * @method string      getComment()          Returns the current record's "comment" value
 * @method enum        getIsActive()         Returns the current record's "is_active" value
 * @method Todo        getTodo()             Returns the current record's "Todo" value
 * @method TodoComment setTodoId()           Sets the current record's "todo_id" value
 * @method TodoComment setSfGuardUserId()    Sets the current record's "sf_guard_user_id" value
 * @method TodoComment setComment()          Sets the current record's "comment" value
 * @method TodoComment setIsActive()         Sets the current record's "is_active" value
 * @method TodoComment setTodo()             Sets the current record's "Todo" value
 * 
 * @package    lufy
 * @subpackage model
 * @author     Guillaume Marsay - Futurolan <guillaume@futurolan.net>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTodoComment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('todo_comment');
        $this->hasColumn('todo_id', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('sf_guard_user_id', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('comment', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '',
             ));
        $this->hasColumn('is_active', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'yes',
              1 => 'no',
             ),
             'default' => 'yes',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Todo', array(
             'local' => 'todo_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}