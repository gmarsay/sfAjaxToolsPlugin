<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Page', 'doctrine');

/**
 * BasePage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $description
 * @property enum $status
 * @property integer $page_category_id
 * @property int $view_counter
 * @property PageCategory $PageCategory
 * 
 * @method string       getName()             Returns the current record's "name" value
 * @method string       getDescription()      Returns the current record's "description" value
 * @method enum         getStatus()           Returns the current record's "status" value
 * @method integer      getPageCategoryId()   Returns the current record's "page_category_id" value
 * @method int          getViewCounter()      Returns the current record's "view_counter" value
 * @method PageCategory getPageCategory()     Returns the current record's "PageCategory" value
 * @method Page         setName()             Sets the current record's "name" value
 * @method Page         setDescription()      Sets the current record's "description" value
 * @method Page         setStatus()           Sets the current record's "status" value
 * @method Page         setPageCategoryId()   Sets the current record's "page_category_id" value
 * @method Page         setViewCounter()      Sets the current record's "view_counter" value
 * @method Page         setPageCategory()     Sets the current record's "PageCategory" value
 * 
 * @package    lufy
 * @subpackage model
 * @author     Guillaume Marsay - Futurolan <guillaume@futurolan.net>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('page');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'waiting',
              1 => 'published',
              2 => 'archived',
             ),
             'notnull' => true,
             'default' => 'waiting',
             ));
        $this->hasColumn('page_category_id', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('view_counter', 'int', 4, array(
             'type' => 'int',
             'notnull' => true,
             'default' => 0,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PageCategory', array(
             'local' => 'page_category_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $i18n0 = new Doctrine_Template_I18n(array(
             'fields' => 
             array(
              0 => 'name',
              1 => 'description',
             ),
             ));
        $sluggable1 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             'uniqueBy' => 
             array(
              0 => 'lang',
              1 => 'name',
             ),
             ));
        $i18n0->addChild($sluggable1);
        $this->actAs($timestampable0);
        $this->actAs($i18n0);
    }
}