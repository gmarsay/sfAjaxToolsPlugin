<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ShopHistory', 'doctrine');

/**
 * BaseShopHistory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $shop_product_id
 * @property integer $payment_id
 * @property integer $sf_guard_user_id
 * @property ShopProduct $ShopProduct
 * 
 * @method integer     getShopProductId()    Returns the current record's "shop_product_id" value
 * @method integer     getPaymentId()        Returns the current record's "payment_id" value
 * @method integer     getSfGuardUserId()    Returns the current record's "sf_guard_user_id" value
 * @method ShopProduct getShopProduct()      Returns the current record's "ShopProduct" value
 * @method ShopHistory setShopProductId()    Sets the current record's "shop_product_id" value
 * @method ShopHistory setPaymentId()        Sets the current record's "payment_id" value
 * @method ShopHistory setSfGuardUserId()    Sets the current record's "sf_guard_user_id" value
 * @method ShopHistory setShopProduct()      Sets the current record's "ShopProduct" value
 * 
 * @package    lufy
 * @subpackage model
 * @author     Guillaume Marsay - Futurolan <guillaume@futurolan.net>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseShopHistory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('shop_history');
        $this->hasColumn('shop_product_id', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('payment_id', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('sf_guard_user_id', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ShopProduct', array(
             'local' => 'shop_product_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}