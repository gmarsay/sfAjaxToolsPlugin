<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('project', 'doctrine');

/**
 * Baseproject
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $description
 * @property string $repository
 * @property enum $is_public
 * @property enum $is_active
 * 
 * @method string  getName()        Returns the current record's "name" value
 * @method string  getDescription() Returns the current record's "description" value
 * @method string  getRepository()  Returns the current record's "repository" value
 * @method enum    getIsPublic()    Returns the current record's "is_public" value
 * @method enum    getIsActive()    Returns the current record's "is_active" value
 * @method project setName()        Sets the current record's "name" value
 * @method project setDescription() Sets the current record's "description" value
 * @method project setRepository()  Sets the current record's "repository" value
 * @method project setIsPublic()    Sets the current record's "is_public" value
 * @method project setIsActive()    Sets the current record's "is_active" value
 * 
 * @package    lufy
 * @subpackage model
 * @author     Guillaume Marsay - Futurolan <guillaume@futurolan.net>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Baseproject extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('project');
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 50,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '',
             ));
        $this->hasColumn('repository', 'string', 250, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 250,
             ));
        $this->hasColumn('is_public', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'yes',
              1 => 'no',
             ),
             'default' => 'no',
             ));
        $this->hasColumn('is_active', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'yes',
              1 => 'no',
             ),
             'default' => 'yes',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}