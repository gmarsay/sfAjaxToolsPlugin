CREATE TABLE editor_translation (id BIGINT, name VARCHAR(50) NOT NULL, description TEXT, website TEXT, lang CHAR(2), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE editor (id BIGINT AUTO_INCREMENT, logo_url TEXT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE event_translation (id BIGINT, name VARCHAR(45) NOT NULL, description TEXT, image_url VARCHAR(255), lang CHAR(2), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE event (id BIGINT AUTO_INCREMENT, start_at DATETIME, end_at DATETIME, start_registration_at DATETIME, end_registration_at DATETIME, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE gallery_translation (id BIGINT, name VARCHAR(50) NOT NULL, description TEXT, lang CHAR(2), slug VARCHAR(255), UNIQUE INDEX gallery_translation_sluggable_idx (slug), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE gallery (id BIGINT AUTO_INCREMENT, position INT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE gallery_photo_translation (id BIGINT, name VARCHAR(50) NOT NULL, description TEXT, lang CHAR(2), slug VARCHAR(255), UNIQUE INDEX gallery_photo_translation_sluggable_idx (slug), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE gallery_photo (id BIGINT AUTO_INCREMENT, album_id VARCHAR(50) NOT NULL, gallery_id BIGINT NOT NULL, INDEX gallery_id_idx (gallery_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE game_translation (id BIGINT, name VARCHAR(50) NOT NULL, description TEXT, lang CHAR(2), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE game (id BIGINT AUTO_INCREMENT, year INT, editor_id BIGINT NOT NULL, game_type_id BIGINT NOT NULL, plateform_id BIGINT NOT NULL, image_url TEXT, icon_url TEXT, INDEX editor_id_idx (editor_id), INDEX game_type_id_idx (game_type_id), INDEX plateform_id_idx (plateform_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE game_type_translation (id BIGINT, name VARCHAR(50) NOT NULL, description TEXT, lang CHAR(2), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE game_type (id BIGINT AUTO_INCREMENT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE page_translation (id BIGINT, name VARCHAR(255) NOT NULL, description TEXT, lang CHAR(2), slug VARCHAR(255), UNIQUE INDEX page_translation_sluggable_idx (slug, lang, name), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE page (id BIGINT AUTO_INCREMENT, status VARCHAR(255) DEFAULT 'waiting' NOT NULL, page_category_id BIGINT NOT NULL, view_counter INT DEFAULT 0 NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX page_category_id_idx (page_category_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE page_category (id BIGINT AUTO_INCREMENT, name VARCHAR(50) NOT NULL, description TEXT, root_id BIGINT, lft INT, rgt INT, level SMALLINT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE plateform_translation (id BIGINT, name VARCHAR(50) NOT NULL, tag VARCHAR(20) NOT NULL, description TEXT, constructor VARCHAR(50), lang CHAR(2), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE plateform (id BIGINT AUTO_INCREMENT, icon_url TEXT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE quiz_translation (id BIGINT, name VARCHAR(50) NOT NULL, description TEXT, background_image VARCHAR(250), lang CHAR(2), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE quiz (id BIGINT AUTO_INCREMENT, style TEXT, background_color VARCHAR(7) NOT NULL, is_public VARCHAR(255), start_at DATE, end_at DATE, image VARCHAR(250), slug VARCHAR(250) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE quiz_answer_translation (id BIGINT, name TEXT NOT NULL, lang CHAR(2), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE quiz_answer (id BIGINT AUTO_INCREMENT, is_valid VARCHAR(255) DEFAULT 'no', position SMALLINT DEFAULT 0 NOT NULL, quiz_request_id BIGINT NOT NULL, INDEX quiz_request_id_idx (quiz_request_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE quiz_request_translation (id BIGINT, name TEXT NOT NULL, lang CHAR(2), PRIMARY KEY(id, lang)) ENGINE = INNODB;
CREATE TABLE quiz_request (id BIGINT AUTO_INCREMENT, position SMALLINT DEFAULT 0 NOT NULL, quiz_id BIGINT NOT NULL, INDEX quiz_id_idx (quiz_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE quiz_user (id BIGINT AUTO_INCREMENT, quiz_answer_id BIGINT NOT NULL, sf_guard_user_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX quiz_answer_id_idx (quiz_answer_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE shop_history (id BIGINT AUTO_INCREMENT, shop_product_id BIGINT NOT NULL, payment_id BIGINT NOT NULL, sf_guard_user_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX shop_product_id_idx (shop_product_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE shop_pos (id BIGINT AUTO_INCREMENT, name VARCHAR(50) NOT NULL, description TEXT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE shop_product (id BIGINT AUTO_INCREMENT, name VARCHAR(50) NOT NULL, description TEXT, quantity INT DEFAULT 0 NOT NULL, sold INT DEFAULT 0 NOT NULL, price FLOAT(18, 2) DEFAULT 0 NOT NULL, shop_pos_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, slug VARCHAR(255), UNIQUE INDEX shop_product_sluggable_idx (slug), INDEX shop_pos_id_idx (shop_pos_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE stat_link (id BIGINT AUTO_INCREMENT, name VARCHAR(50) NOT NULL, description TEXT, link_type VARCHAR(255) NOT NULL, short_key VARCHAR(50) NOT NULL, url TEXT NOT NULL, counter INT DEFAULT 0 NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE todo (id BIGINT AUTO_INCREMENT, name VARCHAR(100) NOT NULL, description TEXT, priority VARCHAR(255) DEFAULT 'normal', achieved VARCHAR(255) DEFAULT '0', is_private VARCHAR(255) DEFAULT 'no', is_active VARCHAR(255) DEFAULT 'yes', todo_parent_id BIGINT, todo_group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX todo_group_id_idx (todo_group_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE todo_comment (id BIGINT AUTO_INCREMENT, todo_id BIGINT NOT NULL, sf_guard_user_id BIGINT NOT NULL, comment TEXT NOT NULL, is_active VARCHAR(255) DEFAULT 'yes', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX todo_id_idx (todo_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE todo_group (id BIGINT AUTO_INCREMENT, name VARCHAR(50) NOT NULL, description TEXT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE todo_group_permission (id BIGINT AUTO_INCREMENT, todo_group_id BIGINT NOT NULL, sf_guard_permission_id BIGINT NOT NULL, INDEX todo_group_id_idx (todo_group_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE todo_history (id BIGINT AUTO_INCREMENT, username VARCHAR(50) NOT NULL, module VARCHAR(50) NOT NULL, action VARCHAR(100) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE todo_owner (id BIGINT AUTO_INCREMENT, todo_id BIGINT NOT NULL, sf_guard_user_id BIGINT NOT NULL, INDEX todo_id_idx (todo_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE todo_type (id BIGINT AUTO_INCREMENT, name VARCHAR(50) NOT NULL, description TEXT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_equipment (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, equipment_type VARCHAR(255) NOT NULL, name TEXT NOT NULL, description TEXT, checked_at TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE visitor (id BIGINT AUTO_INCREMENT, birthdate INT, department INT, event_id BIGINT NOT NULL, payment_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX event_id_idx (event_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE editor_translation ADD CONSTRAINT editor_translation_id_editor_id FOREIGN KEY (id) REFERENCES editor(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE event_translation ADD CONSTRAINT event_translation_id_event_id FOREIGN KEY (id) REFERENCES event(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE gallery_translation ADD CONSTRAINT gallery_translation_id_gallery_id FOREIGN KEY (id) REFERENCES gallery(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE gallery_photo_translation ADD CONSTRAINT gallery_photo_translation_id_gallery_photo_id FOREIGN KEY (id) REFERENCES gallery_photo(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE gallery_photo ADD CONSTRAINT gallery_photo_gallery_id_gallery_id FOREIGN KEY (gallery_id) REFERENCES gallery(id);
ALTER TABLE game_translation ADD CONSTRAINT game_translation_id_game_id FOREIGN KEY (id) REFERENCES game(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE game ADD CONSTRAINT game_plateform_id_plateform_id FOREIGN KEY (plateform_id) REFERENCES plateform(id);
ALTER TABLE game ADD CONSTRAINT game_game_type_id_game_type_id FOREIGN KEY (game_type_id) REFERENCES game_type(id);
ALTER TABLE game ADD CONSTRAINT game_editor_id_editor_id FOREIGN KEY (editor_id) REFERENCES editor(id);
ALTER TABLE game_type_translation ADD CONSTRAINT game_type_translation_id_game_type_id FOREIGN KEY (id) REFERENCES game_type(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE page_translation ADD CONSTRAINT page_translation_id_page_id FOREIGN KEY (id) REFERENCES page(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE page ADD CONSTRAINT page_page_category_id_page_category_id FOREIGN KEY (page_category_id) REFERENCES page_category(id);
ALTER TABLE plateform_translation ADD CONSTRAINT plateform_translation_id_plateform_id FOREIGN KEY (id) REFERENCES plateform(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE quiz_translation ADD CONSTRAINT quiz_translation_id_quiz_id FOREIGN KEY (id) REFERENCES quiz(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE quiz_answer_translation ADD CONSTRAINT quiz_answer_translation_id_quiz_answer_id FOREIGN KEY (id) REFERENCES quiz_answer(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE quiz_answer ADD CONSTRAINT quiz_answer_quiz_request_id_quiz_request_id FOREIGN KEY (quiz_request_id) REFERENCES quiz_request(id);
ALTER TABLE quiz_request_translation ADD CONSTRAINT quiz_request_translation_id_quiz_request_id FOREIGN KEY (id) REFERENCES quiz_request(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE quiz_request ADD CONSTRAINT quiz_request_quiz_id_quiz_id FOREIGN KEY (quiz_id) REFERENCES quiz(id);
ALTER TABLE quiz_user ADD CONSTRAINT quiz_user_quiz_answer_id_quiz_answer_id FOREIGN KEY (quiz_answer_id) REFERENCES quiz_answer(id);
ALTER TABLE shop_history ADD CONSTRAINT shop_history_shop_product_id_shop_product_id FOREIGN KEY (shop_product_id) REFERENCES shop_product(id);
ALTER TABLE shop_product ADD CONSTRAINT shop_product_shop_pos_id_shop_pos_id FOREIGN KEY (shop_pos_id) REFERENCES shop_pos(id);
ALTER TABLE todo ADD CONSTRAINT todo_todo_group_id_todo_group_id FOREIGN KEY (todo_group_id) REFERENCES todo_group(id);
ALTER TABLE todo_comment ADD CONSTRAINT todo_comment_todo_id_todo_id FOREIGN KEY (todo_id) REFERENCES todo(id);
ALTER TABLE todo_group_permission ADD CONSTRAINT todo_group_permission_todo_group_id_todo_group_id FOREIGN KEY (todo_group_id) REFERENCES todo_group(id);
ALTER TABLE todo_owner ADD CONSTRAINT todo_owner_todo_id_todo_id FOREIGN KEY (todo_id) REFERENCES todo(id);
ALTER TABLE visitor ADD CONSTRAINT visitor_event_id_event_id FOREIGN KEY (event_id) REFERENCES event(id);
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
